<style>
	@import url('https://fonts.googleapis.com/css?family=Roboto&display=swap');

	:root {
		--dark-color-a: #1f1f20;
		--dark-color-b: #252729;
		--light-color: #e4e4e4;
		--success-color: #5cb85c;
		--error-color: #d9534f;
	}

	* {
		box-sizing: border-box;
		margin: 0;
		padding: 0;
	}

	body {
		font-family: 'Roboto', sans-serif;
		font-size: 16px;

		margin: 20px;
	}

	ul {
		list-style: none;
	}

	a {
		text-decoration: none;
	}

	.button {
		cursor: pointer;
		padding: 5px 15px;
		background: var(--light-color);
		color: var(--dark-color-a);
		border: 0;
		font-size: 17px;
	}

	/* Chat Page */

	.chat-container {
		max-width: 2100px;
		background: #fff;
		margin: 10px auto;
		overflow: hidden;

	}

	.chat-header {
		background: var(--dark-color-a);
		color: #fff;
		border-top-left-radius: 5px;
		border-top-right-radius: 5px;
		padding: 15px;
		display: flex;
		align-items: center;
		justify-content: space-between;
	}

	.chat-main {
		display: grid;
		grid-template-columns: 1fr 3fr;
		height: 700px;
	}

	.chat-sidebar {
		background: var(--dark-color-b);
		color: #fff;
		padding: 20px 20px 60px;
		overflow-y: scroll;
	}

	.chat-sidebar h2 {
		font-size: 20px;
		background: rgba(0, 0, 0, 0.1);
		padding: 10px;
		margin-bottom: 20px;
	}

	.chat-sidebar h3 {
		margin-bottom: 15px;
	}

	.chat-sidebar ul li {
		padding: 10px 0;
	}

	.chat-messages {
		padding: 30px;
		max-height: 690px;
		overflow-y: scroll;
	}

	.chat-messages .message {
		padding: 10px;
		margin-bottom: 15px;
		background-color: var(--light-color);
		border-radius: 5px;
		overflow-wrap: break-word;
	}

	.chat-messages .message .meta {
		font-size: 15px;
		font-weight: bold;
		color: var(--dark-color-b);
		opacity: 0.7;
		margin-bottom: 7px;
	}

	.chat-messages .message .meta span {
		color: #777;
	}

	.chat-form-container {
		padding: 20px 30px;
		background-color: var(--dark-color-a);
	}

	.chat-form-container form {
		display: flex;
	}

	.chat-form-container input[type='text'] {
		font-size: 16px;
		padding: 5px;
		height: 40px;
		flex: 1;
	}

	/* Join Page */
	.join-container {
		max-width: 500px;
		margin: 80px auto;
		color: #fff;
	}

	.join-header {
		text-align: center;
		padding: 20px;
		background: var(--dark-color-a);
		border-top-left-radius: 5px;
		border-top-right-radius: 5px;
	}

	.join-main {
		padding: 30px 40px;
		background: var(--dark-color-b);
	}

	.join-main p {
		margin-bottom: 20px;
	}

	.join-main .form-control {
		margin-bottom: 20px;
	}

	.join-main label {
		display: block;
		margin-bottom: 5px;
	}

	.join-main input[type='text'] {
		font-size: 16px;
		padding: 5px;
		height: 40px;
		width: 100%;
	}

	.join-main select {
		font-size: 16px;
		padding: 5px;
		height: 40px;
		width: 100%;
	}

	.join-main .btn {
		margin-top: 20px;
		width: 100%;
	}

	@media (max-width: 700px) {
		.chat-main {
			display: block;
		}

		.chat-sidebar {
			display: none;
		}
	}
</style>
<div class="chat-container">
	<header class="chat-header">
		<h1><i class="fas fa-smile"></i> KeyhubChat</h1>
		<a href="/" class="button">Leave Room</a>
	</header>
	<main class="chat-main">
		<div class="chat-sidebar">
			<h3><i class="fas fa-comments"></i> Room Name:</h3>

			{{#each all_rooms}}
			<a href="/community/chat/{{this}}">
				<h2 style="color:white; max-width: 300px" id="room-name"><a href="/community/chat/{{this}}" style="color: white">{{this}}</a><button
						style="display:inline-block;margin-left: 55%; background-color:#1f1f20; border:#1f1f20"><i
							class="fa fa-refresh" data-toggle="modal" data-target="#update-{{this}}"style="color: white" aria-hidden="true"></i></button>
					<button style="display:inline-block;background-color:#1f1f20; border:#1f1f20"><i class="fa fa-trash"
							aria-hidden="true" style="margin-left: 5px; color:white;" data-toggle="modal" data-target="#delete-{{this}}"></i></button>
				</h2>
	



<div class="modal fade" id="update-{{this}}" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="exampleModalCenterTitle" style="color: black">Update {{this}}</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
                <form method="POST" action="/community/chat/update-room">

					
					<div class="form-group ">
						<label style="color:black">Room name</label>
					    <input class="form-control" name="name" value="{{this}}" type="text" required>
						<input name="prev_name" value="{{this}}" type="hidden">
					</div> <!-- form-group end.// --> 
	
				
			    <div class="form-group">
			        <button type="submit" class="btn btn-primary btn-block"> Update Room </button>
			    </div> 
				
				
				<!-- form-group// -->     
</form>

		
      </div>
     
    </div>
  </div>
</div>





<div class="modal fade" id="delete-{{this}}" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="exampleModalCenterTitle" style="color: black">Are You Sure You Want To Delete {{this}}</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
                <form method="POST" action="/community/chat/delete-room">

			
					    <input class="form-control" name="delete" value="{{this}}" type="hidden" required>
			
	
				
			    <div class="form-group">
			        <button type="submit" class="btn btn-danger btn-block"> Delete Room </button>
			    </div> 
				
				
				<!-- form-group// -->     
</form>

		
      </div>
     
    </div>
  </div>
</div>




			{{/each}}
			<!-- Button trigger modal -->
			{{#equals user.isStaff 1}}
			<button type="button" style="margin-bottom: 50px;" class="btn btn-primary" data-toggle="modal"
				data-target="#exampleModalCenter">
				Add Chat Room
			</button>

			{{/equals}}


			<!-- Modal -->
			<div class="modal fade" id="exampleModalCenter" tabindex="-1" role="dialog"
				aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
				<div class="modal-dialog modal-dialog-centered" role="document">
					<div class="modal-content">
						<div class="modal-header">
							<h5 class="modal-title" id="exampleModalCenterTitle" style="color: black">Create a room</h5>
							<button type="button" class="close" data-dismiss="modal" aria-label="Close">
								<span aria-hidden="true">&times;</span>
							</button>
						</div>
						<div class="modal-body">
							<form method="POST" action="/community/chat/create-room">


								<div class="form-group ">
									<label style="color:black">Room name</label>
									<input class="form-control" name="name" type="text" required>
								</div> <!-- form-group end.// -->


								<div class="form-group">
									<button type="submit" class="btn btn-primary btn-block"> Create Room </button>
								</div>


								<!-- form-group// -->
							</form>


						</div>

					</div>
				</div>
			</div>
			<h3><i class="fas fa-users"></i>Online Users In This Room: {{user_count}}</h3>

		</div>
		<div class="chat-messages">

			{{#each messages}}
			<div class="message">
				<p class="meta">{{this.username}}<span> {{this.time}}</span></p>
				<p class="text">
					{{this.text}}
				</p>
			</div>
			{{/each}}
		</div>
	</main>
	<div class="chat-form-container">
		<form id="chat-form">
			<input id="msg" type="text" placeholder="Enter Message" required autocomplete="off" />
			<button class="button"><i class="fas fa-paper-plane"></i> Send</button>
		</form>
	</div>
</div>


<script src="/socket.io/socket.io.js"></script>

<script>
	const chatForm = document.getElementById("chat-form");
	const chatMessages = document.querySelector(".chat-messages")
	const socket = io()
	socket.emit("joinRoom", "{{room}}")
	socket.on("message", message => {
		console.log('why')
		console.log(message)
		outputMessage(message)
		chatMessages.scrollTop = chatMessages.scrollHeight;
	})

	socket.on("connect", () => {
		console.log("CONNECTED")

	})

	socket.on("disconnected", () => {
		console.log("DISCONNECTED")

	})

	socket.on('roomUsers', ({ room, users }) => {
		outputRoomName(room);
		outputUsers(users);
		console.log(users)
	});


	chatForm.addEventListener("submit", (e) => {
		e.preventDefault();
		const msg = e.target.elements.msg.value
		const val = document.getElementById("msg")
		val.value = ""
		socket.emit("chatMessage", msg)
	})

	function outputMessage(message) {
		const div = document.createElement("div")
		div.classList.add("message")
		div.innerHTML = `			<p class="meta">${message.username} <span> ${message.time}</span></p>
						<p class="text">
						${message.message}
						</p>`
		document.querySelector(".chat-messages").appendChild(div)
	}

	function addItem() {
		var list = document.getElementById('users');
		var entry = document.createElement("li")
		entry.setAttribute('id', "{{username}}")
		entry.appendChild(document.createTextNode("{{username}}"))

		list.appendChild(entry)
	}

	function removeItem() {
		var list = document.getElementById("users")
		var candidate = document.getElementById("{{username}}")
		list.removeChild(candidate)

	}

	function outputRoomName(room) {
		roomName.innerText = room;
	}

	// Add users to DOM
	function outputUsers(users) {
		userList.innerHTML = '';
		users.forEach((user) => {
			const li = document.createElement('li');
			li.innerText = user.username;
			userList.appendChild(li);
		});
	}

</script>
<script src="bootstrap.min.js" />